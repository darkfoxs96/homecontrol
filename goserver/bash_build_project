#!/bin/bash

# VERSION
VERSERVER="1.0.0_alpha"

# PATHS
HOMEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
OUTDIR="$HOMEDIR/build/dist"
LOADFILESDIR="$HOMEDIR/build"

MAC64="$OUTDIR/mac_x64_"$VERSERVER"_home_control_server"
MAC="$OUTDIR/mac_"$VERSERVER"_home_control_server"
WIN64="$OUTDIR/win_x64_"$VERSERVER"_home_control_server"
WIN="$OUTDIR/win_"$VERSERVER"_home_control_server"
LINUX64="$OUTDIR/linux_x64_"$VERSERVER"_home_control_server"
LINUX="$OUTDIR/linux_"$VERSERVER"_home_control_server"

# FILES
WINSTART="win_start_server.bat"
MACSTART="mac_start_server"
LINUXSTART="linux_start_server"
CONFIG="app.conf"

# START
mkdir $OUTDIR
cd $HOMEDIR

# Example:
# $1 = $MAC64 or $WIN ...
# $2 = $MACSTART or $LINUXSTART ...
# $3 = name: "mac_x64" or "linux_x64" or "win" ...
# $4 = OS   for go build: "darwin" or "windows" or "linux" ...
# $5 = ARCH for go build: "amd64" or "386" ...
# $6 = name out file go build: "macGSHC" or "winGSHC.exe" ...
# $7 = out name file:          "GSHC"    or "GSHC.exe" ...
funcBuildServer () {
    mkdir $1
    mkdir $1/webhomecontrol
    mkdir $1/models

    cp $LOADFILESDIR/$2 $1/$2
    cp -R $HOMEDIR/swagger $1/swagger
    cp -R $HOMEDIR/conf $1/conf
    cp -R $HOMEDIR/static $1/static
    cp -R $HOMEDIR/views $1/views
    cp -R $HOMEDIR/webhomecontrol/dist $1/webhomecontrol/dist
    cp $LOADFILESDIR/$CONFIG $1/conf/$CONFIG

    env GOOS="$4" GOARCH="$5" go build -o "$6"
    cp -R $HOMEDIR/"$6" $1/"$6"

    mv $1/"$6" $1/"$7"

    cd $1
    zip -r "$3"_"$VERSERVER"_home_control_server.zip ./
    cp ./"$3"_"$VERSERVER"_home_control_server.zip $OUTDIR/"$3"_"$VERSERVER"_home_control_server.zip
    rm -r -f $1
    cd $HOMEDIR

    rm -r -f $HOMEDIR/"$6"
}

# BUILD
funcBuildServer $MAC64 $MACSTART "mac_x64" "darwin" "amd64" "mac64GSHC" "GSHC" &
funcBuildServer $MAC   $MACSTART "mac"     "darwin" "386"   "macGSHC"   "GSHC" &

funcBuildServer $WIN64 $WINSTART "win_x64" "windows" "amd64" "win64GSHC.exe" "GSHC.exe" &
funcBuildServer $WIN   $WINSTART "win"     "windows" "386"   "winGSHC.exe"   "GSHC.exe" &

funcBuildServer $LINUX64 $LINUXSTART "linux_x64" "linux" "amd64" "linux64GSHC" "GSHC" &
funcBuildServer $LINUX   $LINUXSTART "linux"     "linux" "386"   "linuxGSHC"   "GSHC" &

echo "build..."

wait
echo "ok!"

# END
kill -9 $PPID
exit 0
