{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/commands/commands.component.html","webpack:///./src/app/components/commands/commands.component.scss","webpack:///./src/app/components/commands/commands.component.ts","webpack:///./src/app/components/control/control.component.css","webpack:///./src/app/components/control/control.component.html","webpack:///./src/app/components/control/control.component.ts","webpack:///./src/app/components/control/remote-controller/remote-controller.component.css","webpack:///./src/app/components/control/remote-controller/remote-controller.component.html","webpack:///./src/app/components/control/remote-controller/remote-controller.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/settings/settings-controlleds/settings-controlleds.component.css","webpack:///./src/app/components/settings/settings-controlleds/settings-controlleds.component.html","webpack:///./src/app/components/settings/settings-controlleds/settings-controlleds.component.ts","webpack:///./src/app/components/settings/settings-email/settings-email.component.css","webpack:///./src/app/components/settings/settings-email/settings-email.component.html","webpack:///./src/app/components/settings/settings-email/settings-email.component.ts","webpack:///./src/app/components/settings/settings-home/settings-home.component.css","webpack:///./src/app/components/settings/settings-home/settings-home.component.html","webpack:///./src/app/components/settings/settings-home/settings-home.component.ts","webpack:///./src/app/components/settings/settings-interfaces/settings-interfaces.component.css","webpack:///./src/app/components/settings/settings-interfaces/settings-interfaces.component.html","webpack:///./src/app/components/settings/settings-interfaces/settings-interfaces.component.ts","webpack:///./src/app/components/settings/settings.component.css","webpack:///./src/app/components/settings/settings.component.html","webpack:///./src/app/components/settings/settings.component.ts","webpack:///./src/app/models/command-record.model.ts","webpack:///./src/app/models/controlled.model.ts","webpack:///./src/app/services/bot-messenger.service.ts","webpack:///./src/app/services/command-record.service.ts","webpack:///./src/app/services/command.service.ts","webpack:///./src/app/services/controlled.service.ts","webpack:///./src/app/services/lang.service.ts","webpack:///./src/app/services/load-array.service.ts","webpack:///./src/app/services/sound-parsing.service.ts","webpack:///./src/app/services/t-p-home-control.service.ts","webpack:///./src/app/services/use-control.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/store/actions/appActions.ts","webpack:///./src/app/store/reducers/appReducer.ts","webpack:///./src/app/store/reducers/index.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<app-navbar></app-navbar>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"modal_login_user\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal_login_user_label\\\" aria-hidden=\\\"true\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"modal_login_user_label\\\">{{ t.T('Login') }}</h5>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <form action=\\\"javascript:void(null);\\\">\\n\\n          <div class=\\\"input-group mb-1\\\">\\n            <input id=\\\"login_password_user\\\" style=\\\"max-width: 400px\\\" type=\\\"password\\\" autocomplete=\\\"password\\\" class=\\\"form-control form_luminescence mt-2\\\" placeholder=\\\"{{ t.T('Password') }}\\\">\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"login()\\\">{{ t.T('Login') }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none; }\\n\"","import { Component, OnInit } from '@angular/core';\ndeclare var $ :any;\n\nimport { LangService } from \"./services/lang.service\";\nimport { UserService } from \"./services/user.service\";\nimport { LoadArrayService } from \"./services/load-array.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(public  t:         LangService,\n              private user:      UserService,\n              private loadArray: LoadArrayService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.user.getSMTPServer().subscribe(\n      () => {},\n      (err) => {\n        if(err.status == 401) {\n          $('#modal_login_user').modal('show');\n        }\n      }\n    );\n  }\n\n  login() {\n    let password: string = (<any>document.getElementById('login_password_user')).value;\n\n    this.user.login(password).subscribe(\n      () => {\n        this.loadArray.getStore().load_array();\n        $('#modal_login_user').modal('hide');\n      },\n      (err) => {\n        alert(err.error)\n      }\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\n\n// Redux\nimport { StoreModule } from \"@ngrx/store\";\nimport { Reducers } from \"./store/reducers\";\n\n// Services:\nimport { LangService } from './services/lang.service';\nimport { CommandRecordService } from \"./services/command-record.service\";\nimport { CommandService } from \"./services/command.service\";\nimport { ControlledService } from \"./services/controlled.service\";\nimport { UseControlService } from \"./services/use-control.service\";\nimport { UserService } from \"./services/user.service\";\nimport { SoundParsingService } from \"./services/sound-parsing.service\";\nimport { BotMessengerService } from \"./services/bot-messenger.service\";\nimport { TPHomeControlService } from \"./services/t-p-home-control.service\";\nimport { LoadArrayService } from \"./services/load-array.service\";\n\n// Components:\nimport { AppComponent } from './app.component';\nimport { ControlComponent } from './components/control/control.component';\nimport { SettingsComponent } from './components/settings/settings.component';\nimport { CommandsComponent } from './components/commands/commands.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { RemoteControllerComponent } from './components/control/remote-controller/remote-controller.component';\nimport { SettingsHomeComponent } from './components/settings/settings-home/settings-home.component';\nimport { SettingsEmailComponent } from './components/settings/settings-email/settings-email.component';\nimport { SettingsInterfacesComponent } from './components/settings/settings-interfaces/settings-interfaces.component';\nimport { SettingsControlledsComponent } from './components/settings/settings-controlleds/settings-controlleds.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    CommandsComponent,\n    ControlComponent,\n    RemoteControllerComponent,\n    SettingsComponent,\n    SettingsHomeComponent,\n    SettingsEmailComponent,\n    SettingsInterfacesComponent,\n    SettingsControlledsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    StoreModule.forRoot(Reducers, {}),\n  ],\n  providers: [\n    LangService,\n    CommandRecordService,\n    CommandService,\n    ControlledService,\n    UseControlService,\n    UserService,\n    SoundParsingService,\n    BotMessengerService,\n    TPHomeControlService,\n    LoadArrayService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21\\\">\\n  <a class=\\\"nav-item nav-link badge-light\\\"\\n     href=\\\"javascript:void(null);\\\">\\n    <a aria-hidden=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal_add_command\\\">\\n      <a class=\\\"navbar_visible_text\\\">{{ t.T('Add command') }} </a>\\n      <i class=\\\"fa fa-plus-square fa-lg\\\"></i>\\n    </a>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n</nav>\\n\\n<div (window:resize)=\\\"onResize($event)\\\"></div>\\n\\n<div [class.col-10]=\\\"table_p\\\"\\n     [class.element_center_col]=\\\"table_p\\\">\\n  <table class=\\\"table table-hover table-text-size mt-2\\\"\\n         [class.table-sm]=\\\"table_sm\\\"\\n         >\\n    <thead class=\\\"thead-light\\\">\\n      <tr>\\n        <th scope=\\\"col\\\">#</th>\\n        <th scope=\\\"col\\\">{{ t.T('Name') }}</th>\\n        <th scope=\\\"col\\\">{{ t.T('Command') }}</th>\\n        <th scope=\\\"col\\\">{{ t.T('Auxiliary command') }}</th>\\n        <th scope=\\\"col\\\">{{ t.T('Controlled?') }}</th>\\n        <th scope=\\\"col\\\"> </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n\\n      <tr *ngFor=\\\"let record of listRecord; let i = index\\\"\\n          class=\\\"table-row\\\" [class.table-primary]=\\\"record.is_controlled\\\" id=\\\"list_command_row_{{ record.id }}\\\">\\n        <th scope=\\\"row\\\">{{ i + 1 }}</th>\\n        <td>{{ record.id }}</td>\\n        <td>{{ record.command }}</td>\\n        <td>{{ record.string_command }}</td>\\n        <td>{{ record.controlled }}</td>\\n        <td><a href=\\\"javascript:void(null);\\\" class=\\\"table-icon-size\\\" style=\\\"color: #1d2124\\\">\\n            <i class=\\\"fa fa-trash fa-lg\\\" aria-hidden=\\\"true\\\" (click)=\\\"deleteCommand(record.id)\\\"></i>\\n            </a></td>\\n      </tr>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"modal_add_command\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal_add_command_label\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"modal_add_command_label\\\">{{ t.T('Add command') }}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <!-- Example single button -->\\n        <div class=\\\"btn-group mt-1\\\">\\n          <button type=\\\"button\\\" id=\\\"type_command_button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            {{ t.T('Add command') }}\\n          </button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"typeCommandControlButton('command', t.T('Add command'))\\\">{{ t.T('Add command') }}</a>\\n            <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"typeCommandControlButton('callsign', t.T('Add callsign'))\\\">{{ t.T('Add callsign') }}</a>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"visibl_add_command\\\">\\n\\n          <!-- Example single button -->\\n          <div class=\\\"btn-group mt-2\\\">\\n            <button type=\\\"button\\\" id=\\\"name_interface_for_command\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{ t.T('Controlled') }}\\n            </button>\\n            <div class=\\\"dropdown-menu\\\">\\n\\n              <a *ngFor=\\\"let name_inteface of list_inteface\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\"\\n                 (click)=\\\"goSelectInterface(name_inteface)\\\">{{ name_inteface }}</a>\\n\\n            </div>\\n          </div><br>\\n\\n          <div class=\\\"btn-group mt-2\\\">\\n            <button type=\\\"button\\\" id=\\\"select_id_command_button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{ t.T('Command') }}\\n            </button>\\n            <div class=\\\"dropdown-menu\\\">\\n\\n              <a *ngFor=\\\"let command of map_command_info[select_interface]\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\"\\n                 (click)=\\\"goSelectCommandID(command.id, command.info_command)\\\">{{ command.info_command }}</a>\\n\\n            </div>\\n          </div><br>\\n\\n          <form action=\\\"javascript:void(null);\\\" class=\\\"mt-2\\\">\\n            <div class=\\\"form-group\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control form_luminescence\\\" id=\\\"add_command_string_input\\\" name=\\\"buffer\\\" placeholder=\\\"{{ t.T('Text to the command') }}\\\">\\n            </div>\\n          </form>\\n\\n        </div>\\n\\n        <div *ngIf=\\\"visibl_add_callsign\\\">\\n          <div class=\\\"btn-group mt-2\\\">\\n            <button type=\\\"button\\\" id=\\\"select_id_controlled_button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n              {{ t.T('Name') }}\\n            </button>\\n            <div class=\\\"dropdown-menu\\\">\\n\\n              <a *ngFor=\\\"let controlled of list_controlled\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\"\\n                 (click)=\\\"goSelectControlledID(controlled.id, controlled.name)\\\">{{ controlled.name }} id: {{ controlled.id }}</a>\\n\\n            </div>\\n          </div><br>\\n          <p class=\\\"mt-1\\\">{{ t.T('No more than one word') }}</p>\\n        </div>\\n\\n        <form action=\\\"javascript:void(null);\\\" class=\\\"mt-2\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control form_luminescence\\\" id=\\\"add_command_name_input\\\" name=\\\"buffer\\\" placeholder=\\\"{{ t.T('Command') }}\\\">\\n          </div>\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">{{ t.T('Close') }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"addCommand()\\\">{{ t.T('Save') }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"@media (max-width: 500px) {\\n  .navbar_visible_text {\\n    display: none; } }\\n\\n.navbar_bg_color_use_item {\\n  background-color: #e0e6eb; }\\n\\n@media (max-width: 500px) {\\n  .table-text-size {\\n    font-size: 10px; }\\n  .table-icon-size {\\n    font-size: 14px; }\\n  .add_command_icon {\\n    font-size: 12px; } }\\n\\n.element_center_col {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.add_command:hover {\\n  cursor: pointer; }\\n\\n.add_command:active {\\n  -webkit-transform: scale(0.95, 0.95);\\n          transform: scale(0.95, 0.95); }\\n\\n.form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none; }\\n\"","import { Component, Input, OnInit } from '@angular/core';\ndeclare var $ :any;\n\nimport { LangService } from \"../../services/lang.service\";\nimport { CommandRecordService } from \"../../services/command-record.service\";\nimport { ControlledService } from \"../../services/controlled.service\";\nimport { LoadArrayService } from \"../../services/load-array.service\";\nimport { GO_RELOAD_ARRAY } from \"../../store/actions/appActions\";\n\nimport { Controlled } from \"../../models/controlled.model\";\nimport { CommandRecord } from \"../../models/command-record.model\";\nimport { Command, ListCommands } from \"../../models/list-commands.model\";\n\ninterface IRecord {\n  id:             string,\n  command:        string,\n  string_command: string,\n  controlled:     string,\n  is_controlled:  boolean,\n}\n\n@Component({\n  selector: 'app-commands',\n  templateUrl: './commands.component.html',\n  styleUrls: ['./commands.component.scss']\n})\nexport class CommandsComponent implements OnInit {\n  public  listRecord: IRecord[] = [];\n\n  // Add command\n  visibl_add_command      = true;\n  command_id              = 0;\n  list_inteface: string[] = [];\n  select_interface        = '';\n\n  map_command_info: {[key: string]: Command[]} = {['']: []};\n  visibl_add_callsign  = false;\n\n  select_controlled_id = 0;\n  // Table\n  public  table_sm = false;\n  public  table_p  = false;\n\n  public  map_command_record: {[key: string]: CommandRecord} = {['']: new CommandRecord()};\n\n  private list_commands:       ListCommands[]  = [];\n  public  list_controlled:     Controlled[]    = [];\n  private list_command_record: CommandRecord[] = [];\n\n  constructor(public  t:             LangService,\n              private storeArray:    LoadArrayService,\n              private commandRecord: CommandRecordService,\n              private controlled:    ControlledService,\n  ) {\n    this.storeArray.getStore().listener_store.subscribe(\n      (data) => {\n        if(data.type == GO_RELOAD_ARRAY) { return; }\n        this.list_commands       = data.list_commands;\n        this.list_controlled     = data.list_controlled;\n        this.list_command_record = data.list_command_record;\n        this.createListRecord();\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.storeArray.getStore().load_array();\n\n    let w = window.innerWidth;\n    if(w < 700) {\n      this.table_sm = true;\n    } else {\n      this.table_sm = false;\n    }\n    if(w > 1000) {\n      this.table_p = true;\n    } else {\n      this.table_p = false;\n    }\n  }\n\n  // createListRecord\n  private createListRecord(): void {\n    let list_create_record:IRecord[] = [];\n\n    this.list_command_record.forEach((command_record) => {\n      this.map_command_record[command_record.id] = command_record;\n    });\n\n    this.list_command_record.forEach((command_record) => {\n      let command = '';\n      let string_command = '';\n      let controlled = '';\n      let is_controlled = false;\n      if(command_record.controlled_id == 0) {\n        command = this.getNameCommand(command_record.command);\n        string_command = command_record.string_command\n      } else {\n        controlled = this.getNameControlled(command_record.controlled_id);\n        is_controlled = true;\n      }\n\n      list_create_record.push({\n        id:             command_record.id,\n        command:        command,\n        string_command: string_command,\n        controlled:     controlled,\n        is_controlled:  is_controlled,\n      });\n    });\n\n    this.listRecord = list_create_record;\n\n    //Create list for add command\n    this.createListNameInterface();\n  }\n\n  getNameCommand(command_id: number): string {\n    let command_name = 'id: ' + command_id;\n    let first_name = command_name;\n    this.list_commands.forEach((commands) => {\n      commands.commands.forEach((command) => {\n        if(command.id == command_id) {\n          command_name = command.info_command;\n          return;\n        }\n      });\n      if(first_name != command_name) return;\n    });\n    return command_name;\n  }\n\n  getNameControlled(controlled_id: number): string {\n    let controlled_name = 'id: ' + controlled_id;\n    this.list_controlled.forEach((controlled) => {\n      if(controlled.id == controlled_id) {\n        controlled_name = controlled.name;\n        return;\n      }\n    });\n    return controlled_name;\n  }\n\n  onResize(event): void {\n    if(event.target.innerWidth < 700) {\n      this.table_sm = true;\n    } else {\n      this.table_sm = false;\n    }\n    if(event.target.innerWidth > 1000) {\n      this.table_p = true;\n    } else {\n      this.table_p = false;\n    }\n  }\n\n  deleteCommand(command_id: string): void {\n    this.commandRecord.deleteCommandRecord(command_id).subscribe(\n      (data) => {\n        let element = document.getElementById('list_command_row_' + command_id);\n        element.parentNode.removeChild(element);\n      },\n      (err) => {\n        alert(err.error);\n      }\n    );\n  }\n\n  // Add command\n  createListNameInterface(): void {\n    let list_create_inteface: string[] = [];\n\n    this.list_controlled.forEach((controlled) => {\n      if(controlled.home_control_id != '') {\n        list_create_inteface.push(controlled.home_control_id)\n      }\n    });\n    list_create_inteface.push('controlled');\n\n    this.list_commands.forEach((commands) => {\n      this.map_command_info[commands.name_interface] = commands.commands;\n    });\n\n    this.list_inteface = list_create_inteface;\n  }\n\n  typeCommandControlButton(type: string, name: string): void {\n    switch (type) {\n      case 'command':\n        this.visibl_add_command = true;\n        this.visibl_add_callsign = false;\n        break;\n      case 'callsign':\n        this.visibl_add_command = false;\n        this.visibl_add_callsign = true;\n        break;\n    }\n    document.getElementById('type_command_button').innerHTML = name;\n  }\n\n  goSelectInterface(name: string): void {\n    this.select_interface = name;\n    document.getElementById('name_interface_for_command').innerHTML = name;\n  }\n\n  goSelectCommandID(command_id: number, command_info: string): void {\n    this.command_id = command_id;\n    document.getElementById('select_id_command_button').innerHTML = command_info;\n  }\n\n  goSelectControlledID(controlled_id: number, controlled_name): void {\n    this.select_controlled_id = controlled_id;\n    document.getElementById('select_id_controlled_button').innerHTML = controlled_name;\n  }\n\n  addCommand(): void {\n    let id = (<any>document.getElementById('add_command_name_input')).value;\n    if(id == '') {\n      alert(this.t.T('Empty command'))\n      return;\n    }\n    if(this.visibl_add_command) {\n      this.commandRecord.addOrUpdateCommandRecord({\n        id: id,\n        type_record: 2,\n        command: this.command_id,\n        string_command: (<any>document.getElementById('add_command_string_input')).value,\n        number_of_words: 0,\n        controlled_id: 0,\n      }).subscribe(\n        (data) => {\n          $('#modal_add_command').modal('hide');\n          this.listRecord.push({\n            id: id,\n            command: this.getNameCommand(this.command_id),\n            string_command: (<any>document.getElementById('add_command_string_input')).value,\n            controlled: '',\n            is_controlled: false,\n          });\n          this.storeArray.getStore().load_array();\n        },\n        (err) => {\n          alert(err.error)\n        });\n    }\n    if(this.visibl_add_callsign) {\n      let array_id = id.split(\" \");\n      if(array_id.length > 1) {\n        alert(this.t.T('No more than one word'))\n        return;\n      }\n      this.commandRecord.addOrUpdateCommandRecord({\n        id: id,\n        type_record: 1,\n        command: 0,\n        string_command: '',\n        number_of_words: 0,\n        controlled_id: this.select_controlled_id,\n      }).subscribe(\n        (data) => {\n          $('#modal_add_command').modal('hide');\n          this.listRecord.push({\n            id: id,\n            command: '',\n            string_command: '',\n            controlled: this.getNameControlled(this.select_controlled_id),\n            is_controlled: true,\n          });\n          this.storeArray.getStore().load_array();\n      },\n        (err) => {\n          alert(err.error)\n        });\n    }\n  }\n}\n","module.exports = \".element_center_col {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto\\n}\\n\\n.microphone {\\n  background-color: white;\\n  color: #b9bbbe;\\n  outline: none;\\n  border: 5px solid black;\\n  border-radius: 45px;\\n}\\n\\n.microphone:hover {\\n  cursor: pointer;\\n}\\n\\n.active {\\n  color: #123760;\\n  box-shadow: 0 0 10px #1a4f89;\\n  -webkit-transform: scale(1.07, 1.07);\\n          transform: scale(1.07, 1.07);\\n}\\n\\n.form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none;\\n}\\n\\n@media (max-width: 500px) {\\n  .navbar_visible_text {\\n    display: none;\\n  }\\n}\\n\\n.navbar_bg_color_use_item {\\n  background-color: #e0e6eb;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21\\\">\\n  <a class=\\\"nav-item nav-link badge-light\\\"\\n     href=\\\"javascript:void(null);\\\">\\n    <a onclick=\\\"recordingLoadRecording()\\\">\\n      <a class=\\\"navbar_visible_text\\\">{{ t.T('Reload microphone') }} </a>\\n      <i class=\\\"fa fa-refresh fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n    </a>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n</nav>\\n\\n<div class=\\\"container-fluid mt-3\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 mt-3\\\">\\n      <button onclick=\\\"recordingGoControl()\\\" (click)=\\\"usedMicrophone()\\\" class=\\\"element_center_col microphone\\\"\\n      [class.active]=\\\"use_microphone\\\">\\n        <i class=\\\"fa fa-microphone fa-5x\\\" aria-hidden=\\\"true\\\" style=\\\"font-size: 140px\\\"></i>\\n      </button>\\n    </div>\\n\\n    <div class=\\\"col-12 mt-3 mb-1\\\">\\n      <form action=\\\"javascript:void(null);\\\" id=\\\"recording_use_command_form\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control form_luminescence\\\" id=\\\"recording_string_command_input\\\" name=\\\"buffer\\\" placeholder=\\\"{{ t.T('Text to the command') }}\\\">\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-remote-controller></app-remote-controller>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { LangService } from \"../../services/lang.service\";\n\n@Component({\n  selector: 'app-control',\n  templateUrl: './control.component.html',\n  styleUrls: ['./control.component.css']\n})\nexport class ControlComponent implements OnInit {\n  use_microphone = false;\n  private audio = new Audio();\n\n  constructor(public t:LangService,\n  ) { }\n\n  ngOnInit() {\n    this.audio.src = \"../../../assets/sound/record.mp3\";\n    this.audio.load();\n  }\n\n  usedMicrophone() {\n    if(!this.use_microphone) {\n      this.audio.play();\n      setTimeout(() => {\n        this.use_microphone = !this.use_microphone;\n      }, 300);\n    } else {\n      this.use_microphone = !this.use_microphone;\n    }\n  }\n}\n","module.exports = \".btn_remote_controller {\\n  min-width: 155px;\\n  min-height: 50px;\\n  background-color: #5c5d5f;\\n  color: #dbdbdb;\\n}\\n\\n.btn_remote_controller:active {\\n  -webkit-transform: scale(0.95, 0.95);\\n          transform: scale(0.95, 0.95);\\n}\\n\\n@media (max-width: 799px) and (min-width: 453px) {\\n  .btn_remote_controller {\\n    font-size: 14px;\\n    min-width: 150px;\\n    min-height: 40px;\\n  }\\n}\\n\\n@media (max-width: 452px) {\\n  .btn_remote_controller {\\n    font-size: 11px;\\n    min-width: 120px;\\n    min-height: 35px;\\n  }\\n}\\n\\n.element_center_col {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto\\n}\\n\"","module.exports = \"<div class=\\\"container-fluid bg-light\\\" id=\\\"remote_controller_header\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21; border-top: 1px solid #1b1e21\\\">\\n  <div class=\\\"row justify-content-center align-items-center\\\">\\n\\n      <div *ngFor=\\\"let command_list of ListCommand\\\"\\n           class=\\\"col-6 col-sm-4 col-md-3 col-lg-2 col-xl-2 mt-1 mb-1\\\">\\n        <button class=\\\"btn btn-light btn_remote_controller element_center_col remote_controller_accordion\\\"\\n                data-toggle=\\\"collapse\\\" role=\\\"button\\\" (click)=\\\"audio.play(); goScroll();\\\"\\n                aria-expanded=\\\"false\\\" name=\\\"remote_controller_{{ command_list.id_command_record_controlled }}\\\">\\n                {{ command_list.id_command_record_controlled }}</button>\\n      </div>\\n\\n  </div>\\n</div>\\n\\n<div id=\\\"remote_controller_button\\\">\\n\\n  <div *ngFor=\\\"let command_list of ListCommand\\\">\\n    <div class=\\\"collapse multi-collapse\\\" id=\\\"remote_controller_{{ command_list.id_command_record_controlled }}\\\" data-parent=\\\"#remote_controller_button\\\">\\n      <div class=\\\"card card-body\\\">\\n        <div class=\\\"container-fluid mt-3\\\">\\n          <div class=\\\"row justify-content-center align-items-center\\\">\\n\\n            <div *ngFor=\\\"let id_commands of command_list.list_id_command_record\\\" class=\\\"col-6 col-sm-4 col-md-3 col-lg-2 col-xl-2 mt-1\\\">\\n              <button class=\\\"btn btn-light btn_remote_controller element_center_col\\\" (click)=\\\"goTextCommandToServer($event)\\\"\\n                      name=\\\"{{ command_list.id_command_record_controlled }} {{ id_commands }}\\\">\\n                      {{ id_commands }}</button>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { CommandService } from \"../../../services/command.service\";\nimport { ControlledService } from \"../../../services/controlled.service\";\nimport { CommandRecordService } from \"../../../services/command-record.service\";\nimport { LoadArrayService } from \"../../../services/load-array.service\";\nimport { GO_RELOAD_ARRAY } from \"../../../store/actions/appActions\";\n\nimport { ListCommands } from \"../../../models/list-commands.model\";\nimport { Controlled } from \"../../../models/controlled.model\";\nimport { CommandRecord } from \"../../../models/command-record.model\";\n\ninterface IListCommand {\n  id_command_record_controlled: string;\n  list_id_command_record:       string[];\n}\n\n@Component({\n  selector: 'app-remote-controller',\n  templateUrl: './remote-controller.component.html',\n  styleUrls: ['./remote-controller.component.css']\n})\nexport class RemoteControllerComponent implements OnInit {\n  public audio = new Audio();\n  ListCommand: IListCommand[] = [];\n\n  public list_commands:       ListCommands[] = [];\n  public list_controlled:     Controlled[] = [];\n  public list_command_record: CommandRecord[] = [];\n\n  constructor(private storeArray: LoadArrayService,\n              private commandService: CommandService,\n              private controlled: ControlledService,\n              private commandRecord: CommandRecordService\n  ) {\n    this.storeArray.getStore().listener_store.subscribe(\n      (data) => {\n        if(data.type == GO_RELOAD_ARRAY) { return; }\n        this.list_commands       = data.list_commands;\n        this.list_controlled     = data.list_controlled;\n        this.list_command_record = data.list_command_record;\n        this.createListCommand();\n      }\n    );\n\n    this.audio.src = \"../../../assets/sound/click.mp3\";\n    this.audio.load();\n  }\n\n  ngOnInit() {\n    this.storeArray.getStore().load_array();\n  }\n\n  // createListCommand\n  private createListCommand() {\n    let ListCommand: IListCommand[] = [];\n\n    this.list_command_record.forEach((command_record) => {\n      if (command_record.controlled_id != 0) {\n        ListCommand.push({\n          id_command_record_controlled: command_record.id,\n          list_id_command_record: [],\n        });\n      }\n    });\n\n    let map_controlled: { [key: number]: Controlled } = {0: new Controlled()};\n    this.list_controlled.forEach((controlled) => {\n      map_controlled[controlled.id] = controlled;\n    });\n\n    let map_command: {[key: string]: CommandRecord} = {'': new CommandRecord()};\n    this.list_command_record.forEach((command_record) => {\n      map_command[command_record.id] = command_record;\n    });\n\n    this.list_command_record.forEach((command_record) => {\n      if (command_record.controlled_id == 0) {\n        if(this.isCommandForControlled(command_record.command)) {\n          ListCommand.forEach((command, index) =>{\n            let id_thhomecontrol: string = map_controlled[map_command[command.id_command_record_controlled].controlled_id].home_control_id;\n            if(id_thhomecontrol == '') {\n              if(command_record.id.length > 15) {\n                ListCommand[index].list_id_command_record.push(command_record.id.slice(0, 15));\n              } else {\n                ListCommand[index].list_id_command_record.push(command_record.id);\n              }\n            }\n          });\n        } else {\n          let nameTPHomeControl = this.getNameTPHomeControl(command_record.command);\n          ListCommand.forEach((command, index) => {\n            let name = map_controlled[map_command[command.id_command_record_controlled].controlled_id].home_control_id;\n            if(name == nameTPHomeControl) {\n              if(command_record.id.length > 15) {\n                ListCommand[index].list_id_command_record.push(command_record.id.slice(0, 15));\n              } else {\n                ListCommand[index].list_id_command_record.push(command_record.id);\n              }\n            }\n          });\n        }\n      }\n    });\n\n    this.ListCommand = ListCommand;\n\n    // add attribute\n    this.setAttribute()\n  }\n\n  private isCommandForControlled(command: number): boolean {\n    let result = false;\n    this.list_commands.forEach((commands) => {\n      if(commands.name_interface == 'controlled') {\n        if(commands.start_range_id_commands <= command && commands.end_range_id_commands >= command) {\n          result = true;\n          return;\n        } else {\n          result = false;\n          return;\n        }\n      }\n    });\n    return result;\n  }\n\n  private getNameTPHomeControl(command: number): string {\n    let name = '';\n    this.list_commands.forEach((commands) => {\n      if(commands.start_range_id_commands <= command && commands.end_range_id_commands >= command) {\n        name = commands.name_interface;\n      }\n    });\n    return name;\n  }\n\n  // Add attribute\n  private setAttribute() {\n    let status = true;\n    let result = document.getElementsByClassName(\"remote_controller_accordion\");\n    for(let i = 0; i < this.ListCommand.length; i++) {\n      if(result.item(i) === null) {\n        status = false;\n        break;\n      }\n      let name = result.item(i).getAttribute('name');\n      result.item(i).setAttribute('href', '#' + name);\n      result.item(i).setAttribute('aria-controls', name);\n    }\n    if(!status) {\n      setTimeout(() => {\n        this.setAttribute();\n      }, 150);\n    }\n  }\n\n  // Go string command to server\n  public goTextCommandToServer(button) {\n    this.audio.play();\n    let buffer = (<any>document.getElementById('recording_string_command_input')).value;\n    let command = button.target.getAttribute('name');\n    this.commandRecord.useText(command, buffer).subscribe(\n      (data) => {},\n      (err) => {\n        alert(err.error);\n      }\n    );\n  }\n\n  goScroll() {\n    setTimeout(() => {\n      window.scrollTo(0, document.getElementById('remote_controller_header').offsetTop);\n    }, 350);\n  }\n}\n","module.exports = \"@media (max-width: 500px) {\\n  .navbar_visible_text {\\n    display: none;\\n  }\\n}\\n\\n.navbar_bg_color_use_item {\\n  background-color: #e0e6eb;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21\\\">\\n      <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_control\\\" [class.navbar_bg_color_use_item]=\\\"visible_control\\\"\\n         href=\\\"javascript:void(null);\\\" (click)=\\\"visibleControl()\\\"\\n         data-toggle=\\\"collapse\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n          href=\\\"#visible_control_accordion\\\" aria-controls=\\\"visible_control_accordion\\\">\\n        <a class=\\\"navbar_visible_text\\\">{{ t.T('Control') }} </a>\\n        <i class=\\\"fa fa-microphone fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n        <span class=\\\"sr-only\\\">(current)</span>\\n      </a>\\n\\n      <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_settings\\\" [class.navbar_bg_color_use_item]=\\\"visible_settings\\\"\\n         href=\\\"javascript:void(null);\\\" (click)=\\\"visibleSettings()\\\"\\n         data-toggle=\\\"collapse\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n         href=\\\"#visible_settings_accordion\\\" aria-controls=\\\"visible_settings_accordion\\\">\\n        <a class=\\\"navbar_visible_text\\\">{{ t.T('Settings') }} </a>\\n        <i class=\\\"fa fa-cog fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n        <span class=\\\"sr-only\\\">(current)</span>\\n      </a>\\n\\n      <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_commands\\\" [class.navbar_bg_color_use_item]=\\\"visible_commands\\\"\\n         href=\\\"javascript:void(null);\\\" (click)=\\\"visibleCommands()\\\"\\n         data-toggle=\\\"collapse\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\"\\n         href=\\\"#visible_commands_accordion\\\" aria-controls=\\\"visible_commands_accordion\\\">\\n        <a class=\\\"navbar_visible_text\\\">{{ t.T('Commands') }} </a>\\n        <i class=\\\"fa fa-list fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n        <span class=\\\"sr-only\\\">(current)</span>\\n      </a>\\n</nav>\\n\\n<main>\\n\\n  <div id=\\\"navbar_accordion\\\">\\n    <div class=\\\"collapse multi-collapse show\\\" id=\\\"visible_control_accordion\\\" data-parent=\\\"#navbar_accordion\\\">\\n      <div class=\\\"card\\\">\\n            <app-control  *ngIf=\\\"visible_control\\\"></app-control>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"collapse multi-collapse\\\" id=\\\"visible_settings_accordion\\\" data-parent=\\\"#navbar_accordion\\\">\\n      <div class=\\\"card\\\">\\n            <app-settings *ngIf=\\\"visible_settings\\\"></app-settings>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"collapse multi-collapse\\\" id=\\\"visible_commands_accordion\\\" data-parent=\\\"#navbar_accordion\\\">\\n      <div class=\\\"card\\\">\\n            <app-commands *ngIf=\\\"visible_commands\\\"></app-commands>\\n      </div>\\n    </div>\\n  </div>\\n\\n</main>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LangService } from '../../services/lang.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  visible_control = true;\n  visible_settings = false;\n  visible_commands = false;\n\n  constructor(public t: LangService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  visibleControl(): void {\n    this.visible_settings = false;\n    this.visible_commands = false;\n    this.visible_control = true;\n  }\n\n  visibleSettings(): void {\n    this.visible_control = false;\n    this.visible_commands = false;\n    this.visible_settings = true;\n  }\n\n  visibleCommands(): void {\n    this.visible_control = false;\n    this.visible_settings = false;\n    this.visible_commands = true;\n  }\n}\n","module.exports = \"@media (max-width: 500px) {\\n  .navbar_visible_text {\\n    display: none;\\n  }\\n}\\n\\n.navbar_bg_color_use_item {\\n  background-color: #e0e6eb;\\n}\\n\\n@media (max-width: 500px) {\\n  .table-text-size {\\n    font-size: 10px;\\n  }\\n  .table-icon-size {\\n    font-size: 14px;\\n  }\\n  .add_command_icon {\\n    font-size: 12px;\\n  }\\n}\\n\\n.element_center_col {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto\\n}\\n\\n.add_command:hover {\\n  cursor: pointer;\\n}\\n\\n.add_command:active {\\n  -webkit-transform: scale(0.95, 0.95);\\n          transform: scale(0.95, 0.95);\\n}\\n\\n.form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none; }\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21\\\">\\n  <a class=\\\"nav-item nav-link badge-light\\\"\\n     href=\\\"javascript:void(null);\\\"\\n     aria-hidden=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal_add_controlled\\\"\\n     (click)=\\\"selectParam(0, '', '', '', 0, '')\\\">\\n    <a>\\n      <a class=\\\"navbar_visible_text\\\">{{ t.T('Add controlled') }} </a>\\n      <i class=\\\"fa fa-plus-square fa-lg\\\"></i>\\n    </a>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n</nav>\\n\\n<div (window:resize)=\\\"onResize($event)\\\"></div>\\n\\n<div [class.col-10]=\\\"table_p\\\"\\n     [class.element_center_col]=\\\"table_p\\\">\\n  <table class=\\\"table table-hover table-text-size mt-2\\\"\\n         [class.table-sm]=\\\"table_sm\\\"\\n  >\\n    <thead class=\\\"thead-light\\\">\\n    <tr>\\n      <th scope=\\\"col\\\">#</th>\\n      <th scope=\\\"col\\\">{{ t.T('Name') }}</th>\\n      <th scope=\\\"col\\\">Host</th>\\n      <th scope=\\\"col\\\">Port</th>\\n      <th scope=\\\"col\\\">{{ t.T('Common buffer') }}?</th>\\n      <th scope=\\\"col\\\">{{ t.T('TPHC') }}?</th>\\n      <th scope=\\\"col\\\"> </th>\\n      <th scope=\\\"col\\\"> </th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n\\n    <tr *ngFor=\\\"let record of list_controlled; let i = index\\\"\\n        class=\\\"table-row\\\" [class.table-primary]=\\\"record.home_control_id != ''\\\">\\n      <th scope=\\\"row\\\">{{ i + 1 }}</th>\\n      <td>{{ record.name }}</td>\\n      <td>{{ record.host }}</td>\\n      <td>{{ record.port }}</td>\\n      <td>{{ record.common_buffer == 1 }}</td>\\n      <td>{{ record.home_control_id }}</td>\\n      <td><a href=\\\"javascript:void(null);\\\" class=\\\"table-icon-size\\\" style=\\\"color: #1d2124\\\"\\n             aria-hidden=\\\"true\\\" data-toggle=\\\"modal\\\" data-target=\\\"#modal_add_controlled\\\">\\n        <i class=\\\"fa fa-pencil fa-lg\\\" aria-hidden=\\\"true\\\"\\n           (click)=\\\"selectParam(record.id, record.name, record.host, record.port, record.common_buffer, record.home_control_id)\\\"></i>\\n      </a></td>\\n      <td><a href=\\\"javascript:void(null);\\\" class=\\\"table-icon-size\\\" style=\\\"color: #1d2124\\\">\\n        <i class=\\\"fa fa-trash fa-lg\\\" aria-hidden=\\\"true\\\" (click)=\\\"deleteControlled(record.id)\\\"></i>\\n      </a></td>\\n    </tr>\\n\\n    </tbody>\\n  </table>\\n</div>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"modal_add_controlled\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"modal_add_controlled_label\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"modal_add_controlled_label\\\">{{ t.T('Add controlled') }}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n\\n        <form action=\\\"javascript:void(null);\\\" style=\\\"border-bottom: 1px solid #d0cdd0\\\" name=\\\"form_add_or_edit_controlled\\\">\\n\\n          <div class=\\\"input-group\\\">\\n            <input style=\\\"max-width: 400px\\\" type=\\\"text\\\" class=\\\"form-control form_luminescence\\\" name=\\\"name\\\" placeholder=\\\"{{ t.T('Name') }}\\\" [value]=\\\"controlled_name\\\">\\n          </div>\\n\\n          <div class=\\\"input-group\\\">\\n            <input style=\\\"max-width: 400px\\\" type=\\\"text\\\" class=\\\"form-control form_luminescence mt-2\\\" name=\\\"host\\\" placeholder=\\\"Host\\\" [value]=\\\"controlled_host\\\">\\n          </div>\\n\\n          <div class=\\\"input-group\\\">\\n            <input style=\\\"max-width: 400px\\\" type=\\\"text\\\" class=\\\"form-control form_luminescence mt-2\\\" name=\\\"port\\\" placeholder=\\\"Port\\\" [value]=\\\"controlled_port\\\">\\n          </div>\\n\\n          <div class=\\\"form-check row\\\">\\n            <label class=\\\"col-5 col-form-label\\\">{{ t.T('Common buffer') }}:</label>\\n            <input *ngIf=\\\"controlled_common_buffer\\\"  type=\\\"checkbox\\\" class=\\\"form-check-input mt-2 col-7\\\" name=\\\"common_buffer\\\" checked>\\n            <input *ngIf=\\\"!controlled_common_buffer\\\" type=\\\"checkbox\\\" class=\\\"form-check-input mt-2 col-7\\\" name=\\\"common_buffer\\\">\\n          </div>\\n\\n          <div class=\\\"input-group row mb-2 ml-2\\\">\\n            <label class=\\\"col-3 col-form-label\\\">{{ t.T('TPHC') }}:</label>\\n            <div class=\\\"btn-group mt-2 col-9\\\">\\n              <button type=\\\"button\\\" id=\\\"select_id_home_control_button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                {{ controlled_home_control_id }}\\n              </button>\\n              <div class=\\\"dropdown-menu\\\">\\n\\n                <div *ngFor=\\\"let record of list_t_p_home_control\\\">\\n                  <a *ngIf=\\\"record.active\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\"\\n                     (click)=\\\"selectHomeControlID(record.name_id)\\\">{{ record.name_id }}</a>\\n                </div>\\n\\n                  <a class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\"\\n                     (click)=\\\"selectHomeControlID('')\\\"></a>\\n\\n              </div>\\n            </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">{{ t.T('Close') }}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-light\\\" (click)=\\\"goFormControlled()\\\">{{ t.T('Save') }}</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\ndeclare var $ :any;\n\nimport { LoadArrayService } from \"../../../services/load-array.service\";\nimport { GO_RELOAD_ARRAY } from \"../../../store/actions/appActions\";\n\nimport { LangService } from \"../../../services/lang.service\";\nimport { ControlledService } from \"../../../services/controlled.service\";\n\nimport { Controlled } from \"../../../models/controlled.model\";\nimport { StatusInterfaceServer } from \"../../../models/status-interface-server.model\";\nimport {TPHomeControlService} from \"../../../services/t-p-home-control.service\";\nimport {CommandRecord} from \"../../../models/command-record.model\";\nimport {CommandRecordService} from \"../../../services/command-record.service\";\n\n@Component({\n  selector: 'app-settings-controlleds',\n  templateUrl: './settings-controlleds.component.html',\n  styleUrls: ['./settings-controlleds.component.css']\n})\nexport class SettingsControlledsComponent implements OnInit {\n  public  list_controlled:       Controlled[]            = [];\n  private list_command_record:   CommandRecord[]         = [];\n  public  list_t_p_home_control: StatusInterfaceServer[] = [];\n\n  //Form controlled:\n  controlled_id:              number  = 0;\n  controlled_name:            string  = '';\n  controlled_host:            string  = '';\n  controlled_port:            string  = '';\n  controlled_common_buffer:   boolean = false;\n  controlled_home_control_id: string  = '';\n\n  select_home_control_id:     string  = '';\n\n  //Table:\n  table_sm = false;\n  table_p  = false;\n\n  constructor(public  t:             LangService,\n              private storeArray:    LoadArrayService,\n              private controlled:    ControlledService,\n              private homeControl:   TPHomeControlService,\n              private commandRecord: CommandRecordService,\n  ) {\n    this.storeArray.getStore().listener_store.subscribe(\n      (data) => {\n        if(data.type == GO_RELOAD_ARRAY) { return; }\n        this.list_controlled     = data.list_controlled;\n        this.list_command_record = data.list_command_record;\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.storeArray.getStore().load_array();\n\n    this.homeControl.getStatusTPHomeControls().subscribe(\n      (data) => {\n        this.list_t_p_home_control = data;\n      },\n      (err) => {\n        alert(err.error);\n    }\n    );\n\n    let w = window.innerWidth;\n    if(w < 700) {\n      this.table_sm = true;\n    } else {\n      this.table_sm = false;\n    }\n    if(w > 1000) {\n      this.table_p = true;\n    } else {\n      this.table_p = false;\n    }\n  }\n\n  deleteControlled(controlled_id: number): void {\n    this.controlled.deleteControlled(controlled_id).subscribe(\n      () => {\n        let array_promise: Promise<void>[] = [];\n        this.list_command_record.forEach((record) => {\n          if(record.controlled_id == controlled_id) {\n            array_promise.push(\n              this.commandRecord.deleteCommandRecord(record.id).forEach(()=>{})\n            )\n          }\n        });\n        Promise.all(array_promise).then(\n          () => {\n          this.storeArray.getStore().load_array();\n        });\n      },\n    (err) => {\n        alert(err.error);\n    }\n    );\n  }\n\n  selectParam(controlled_id:              number,\n              controlled_name:            string,\n              controlled_host:            string,\n              controlled_port:            string,\n              controlled_common_buffer:   number,\n              controlled_home_control_id: string): void {\n    this.controlled_id              = controlled_id;\n    this.controlled_name            = controlled_name;\n    this.controlled_host            = controlled_host;\n    this.controlled_port            = controlled_port;\n    this.controlled_common_buffer   = controlled_common_buffer == 1;\n    this.controlled_home_control_id = controlled_home_control_id;\n  }\n\n  selectHomeControlID(home_control_id: string) {\n    this.select_home_control_id = home_control_id;\n    document.getElementById('select_id_home_control_button').innerHTML = home_control_id;\n  }\n\n  goFormControlled(): void {\n    if(this.controlled_id == 0) {\n      this.addControlled();\n    } else {\n      this.editControlled();\n    }\n  }\n\n  editControlled(): void {\n    let formData = new FormData(document.forms.namedItem('form_add_or_edit_controlled'));\n\n    let common_buffer = 0;\n    try {\n      formData.get('common_buffer').slice\n      common_buffer = 1;\n    } catch {}\n\n    this.controlled.updateControlled({\n      id:              this.controlled_id,\n      name:            formData.get('name').toString(),\n      host:            formData.get('host').toString(),\n      port:            formData.get('port').toString(),\n      common_buffer:   common_buffer,\n      home_control_id: this.controlled_home_control_id,\n    }).subscribe(\n      () => {\n        this.storeArray.getStore().load_array();\n        $('#modal_add_controlled').modal('hide');\n      },\n      (err) => {\n        alert(err.error);\n      }\n    );\n  }\n\n  addControlled(): void {\n    let formData = new FormData(document.forms.namedItem('form_add_or_edit_controlled'));\n\n    let common_buffer = 0;\n    try {\n      formData.get('common_buffer').slice\n      common_buffer = 1;\n    } catch {}\n\n    this.controlled.addControlled({\n      id:              0,\n      name:            formData.get('name').toString(),\n      host:            formData.get('host').toString(),\n      port:            formData.get('port').toString(),\n      common_buffer:   common_buffer,\n      home_control_id: this.controlled_home_control_id,\n    }).subscribe(\n      (data) => {\n      this.list_controlled.push({\n        id:              parseInt(data),\n        name:            formData.get('name').toString(),\n        host:            formData.get('host').toString(),\n        port:            formData.get('port').toString(),\n        common_buffer:   common_buffer,\n        home_control_id: this.controlled_home_control_id,\n      });\n      $('#modal_add_controlled').modal('hide');\n    },\n      (err) => {\n      alert(err.error);\n    }\n    );\n  }\n\n  onResize(event): void {\n    if(event.target.innerWidth < 700) {\n      this.table_sm = true;\n    } else {\n      this.table_sm = false;\n    }\n    if(event.target.innerWidth > 1000) {\n      this.table_p = true;\n    } else {\n      this.table_p = false;\n    }\n  }\n}\n","module.exports = \".form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none;\\n}\\n\"","module.exports = \"<div class=\\\"ml-4\\\">\\n\\n  <p class=\\\"mt-4\\\" style=\\\"font-size: 18px\\\">{{ t.T('E-mail setup, for password recovery') }}:</p>\\n  <form action=\\\"javascript:void(null);\\\" (submit)=\\\"setEmail()\\\"\\n        style=\\\"border-bottom: 1px solid #d0cdd0\\\" name=\\\"form_set_email\\\">\\n    <div class=\\\"input-group\\\">\\n      <input style=\\\"max-width: 400px\\\" type=\\\"password\\\" autocomplete=\\\"password\\\" class=\\\"form-control form_luminescence\\\" name=\\\"password\\\" placeholder=\\\"{{ t.T('Password') }}\\\">\\n    </div>\\n    <div class=\\\"input-group\\\">\\n      <input style=\\\"max-width: 400px\\\" type=\\\"password\\\" autocomplete=\\\"password\\\" class=\\\"form-control form_luminescence mt-2\\\" name=\\\"email_password\\\" placeholder=\\\"{{ t.T('Email password') }}\\\">\\n    </div>\\n    <div class=\\\"input-group\\\">\\n      <input style=\\\"max-width: 400px\\\" type=\\\"text\\\" autocomplete=\\\"email\\\" class=\\\"form-control form_luminescence mt-2\\\" name=\\\"email_login\\\" placeholder=\\\"{{ t.T('Email login') }}\\\">\\n      <div class=\\\"input-group-prepend\\\">\\n        <div class=\\\"btn-group mt-2\\\">\\n          <button type=\\\"button\\\" id=\\\"select_smtp_server\\\" class=\\\"btn btn-outline-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"\\n          style=\\\"max-height: 40px\\\"></button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a *ngFor=\\\"let smtp of smtp_list\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"selectSMTPServer(smtp)\\\">{{ smtp }}</a>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary mb-1 mt-2\\\">{{ t.T('Save') }}</button>\\n  </form>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { LangService } from \"../../../services/lang.service\";\nimport { UserService } from \"../../../services/user.service\";\n\n@Component({\n  selector: 'app-settings-email',\n  templateUrl: './settings-email.component.html',\n  styleUrls: ['./settings-email.component.css']\n})\nexport class SettingsEmailComponent implements OnInit {\n  smtp_list: string[] = [];\n  select_smtp         = '';\n\n  constructor(public  t:    LangService,\n              private user: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.user.getSMTPServer().subscribe(\n      (data) => {\n        this.smtp_list = data;\n        this.selectSMTPServer(this.smtp_list[0]);\n      },\n      (err) => {\n        alert(err.error)\n    }\n    );\n  }\n\n  selectSMTPServer(smtp: string): void {\n    this.select_smtp = smtp;\n    document.getElementById('select_smtp_server').innerHTML = smtp;\n  }\n\n  setEmail(): void {\n    let formData = new FormData(document.forms.namedItem('form_set_email'));\n\n    let password       = formData.get('password').toString();\n    let email_password = formData.get('email_password').toString();\n    let email_login    = formData.get('email_login').toString();\n\n    if(password          == '' ||\n       email_password    == '' ||\n       email_login       == '' ||\n       this.select_smtp  == ''\n    ) {\n      alert(this.t.T('There is an empty field'));\n      return;\n    }\n\n    this.user.settingsEmail(password, email_login, email_password, this.select_smtp).subscribe(\n      () => {\n        alert('Ok')\n      },\n      (err) => {\n        alert(err.error)\n      }\n    );\n  }\n}\n","module.exports = \".form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none;\\n}\\n\"","module.exports = \"<div class=\\\"ml-4\\\">\\n\\n  <p class=\\\"mt-4\\\" style=\\\"font-size: 18px\\\">{{ t.T('Language') }}:</p>\\n  <div class=\\\"btn-group mb-1\\\">\\n    <button type=\\\"button\\\" id=\\\"select_use_lang\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n      {{ t.getLang() }}\\n    </button>\\n    <div class=\\\"dropdown-menu\\\">\\n      <a *ngFor=\\\"let lang of t.list_lang\\\" class=\\\"dropdown-item\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"setLang(lang)\\\">{{ lang }}</a>\\n    </div>\\n  </div>\\n  <div style=\\\"border-bottom: 1px solid #d0cdd0\\\"></div>\\n\\n  <p class=\\\"mt-4\\\" style=\\\"font-size: 18px\\\">{{ t.T('Set sample rate') }}:</p>\\n  <form action=\\\"javascript:void(null);\\\" (submit)=\\\"setSampleRate()\\\"\\n        style=\\\"border-bottom: 1px solid #d0cdd0\\\">\\n    <div class=\\\"form-group\\\">\\n      <input style=\\\"max-width: 400px\\\" type=\\\"number\\\" class=\\\"form-control form_luminescence\\\" id=\\\"recording_used_sample_rate\\\" value=\\\"{{ getSampleRate() }}\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary mb-1\\\">{{ t.T('Save') }}</button>\\n  </form>\\n\\n  <p class=\\\"mt-4\\\" style=\\\"font-size: 18px\\\">{{ t.T('New password') }}:</p>\\n  <form action=\\\"javascript:void(null);\\\" (submit)=\\\"newPassword()\\\" name=\\\"form_new_password_create\\\"\\n        style=\\\"border-bottom: 1px solid #d0cdd0\\\">\\n    <div class=\\\"form-group\\\">\\n      <input style=\\\"max-width: 400px\\\" type=\\\"password\\\" autocomplete=\\\"password\\\" class=\\\"form-control form_luminescence\\\" name=\\\"old_password\\\" placeholder=\\\"{{ t.T('Old password') }}\\\">\\n      <input style=\\\"max-width: 400px\\\" type=\\\"password\\\" autocomplete=\\\"password\\\" class=\\\"form-control form_luminescence mt-2\\\" name=\\\"new_password\\\" placeholder=\\\"{{ t.T('New password') }}\\\">\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-secondary mb-1\\\">{{ t.T('Save') }}</button>\\n  </form>\\n\\n  <p class=\\\"mt-4\\\" style=\\\"font-size: 18px\\\">{{ t.T('Logout') }}:</p>\\n  <button type=\\\"button\\\" class=\\\"btn btn-secondary mb-1\\\" (click)=\\\"logout()\\\">{{ t.T('Logout') }}</button>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\ndeclare var recordingSetSampleRate: (sample_rate: number) => Error;\ndeclare var recordingGetSampleRate: () => number;\n\nimport { LangService } from \"../../../services/lang.service\";\nimport { UserService } from \"../../../services/user.service\";\n\n@Component({\n  selector: 'app-settings-home',\n  templateUrl: './settings-home.component.html',\n  styleUrls: ['./settings-home.component.css']\n})\nexport class SettingsHomeComponent implements OnInit {\n\n  constructor(public  t:    LangService,\n              private user: UserService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  setLang(lang: string): void {\n    let err = this.t.setLang(lang);\n    if(err) {\n      alert(err.message);\n      return;\n    }\n    document.getElementById('select_use_lang').innerHTML = lang;\n  }\n\n  setSampleRate(): void {\n    let sample_rate = (<any>document.getElementById('recording_used_sample_rate')).value;\n\n    let err = recordingSetSampleRate(parseInt(sample_rate));\n    if(err) {\n      alert(err.message);\n      return;\n    }\n  }\n\n  getSampleRate(): number {\n    return recordingGetSampleRate();\n  }\n\n  newPassword(): void {\n    let formData = new FormData(document.forms.namedItem('form_new_password_create'));\n\n    let old_password = formData.get('old_password').toString();\n    let new_password = formData.get('new_password').toString();\n\n    this.user.passwordNew(old_password, new_password).subscribe(\n      () => {\n        alert('Ok')\n      },\n      (err) => {\n        alert(err.error);\n      }\n    );\n  }\n\n  logout(): void {\n    this.user.logout().subscribe(\n      () => {\n        location.reload();\n      },\n      (err) => {\n        alert(err.error);\n      }\n    );\n  }\n}\n","module.exports = \".form_luminescence:focus {\\n  border-color: rgba(18, 55, 96, 0.8);\\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(26, 79, 137, 0.6);\\n  outline: 0 none;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21\\\">\\n  <div class=\\\"btn-group\\\">\\n    <button type=\\\"button\\\" id=\\\"select_type_interface_button\\\" class=\\\"btn btn-outline-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"\\n            style=\\\"max-height: 40px\\\">Sound parsing</button>\\n    <div class=\\\"dropdown-menu\\\">\\n\\n      <a class=\\\"ml-1\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"selectTypeInterface('Sound parsing')\\\">Sound parsing</a><br>\\n      <a class=\\\"ml-1\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"selectTypeInterface('TP home control')\\\">TP home control</a><br>\\n      <a class=\\\"ml-1\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"selectTypeInterface('Bot messenger')\\\">Bot messenger</a>\\n\\n    </div>\\n  </div>:\\n\\n  <div class=\\\"btn-group ml-2\\\">\\n    <button type=\\\"button\\\" id=\\\"select_name_interface_button\\\" class=\\\"btn btn-outline-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"\\n            style=\\\"max-height: 40px\\\">Sound parsing</button>\\n    <div class=\\\"dropdown-menu\\\">\\n\\n      <div *ngFor=\\\"let interface_status of map_interface[select_type_interface]\\\">\\n        <a *ngIf=\\\"interface_status.active\\\" class=\\\"ml-1\\\" href=\\\"javascript:void(null);\\\" (click)=\\\"selectNameInterface(interface_status.name_id)\\\">{{ interface_status.name_id }}</a><br>\\n      </div>\\n\\n    </div>\\n  </div>\\n</nav>\\n\\n<form class=\\\"ml-4 mt-2\\\" action=\\\"javascript:void(null);\\\" (submit)=\\\"setSettings()\\\"\\n      style=\\\"border-bottom: 1px solid #d0cdd0\\\" name=\\\"form_settings_interface\\\">\\n\\n  <div *ngFor=\\\"let settings of list_field_settings\\\">\\n\\n    <div [ngSwitch]=\\\"settings[1]\\\">\\n\\n      <ng-template ngSwitchCase=\\\"string\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>{{ settings[0] }}:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control mt-2\\\" name=\\\"{{ settings[0] }}\\\" value=\\\"{{ settings[2] }}\\\" style=\\\"max-width: 400px\\\">\\n        </div>\\n      </ng-template>\\n\\n      <ng-template ngSwitchCase=\\\"int\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>{{ settings[0] }}:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control mt-2\\\" name=\\\"{{ settings[0] }}\\\" value=\\\"{{ settings[2] }}\\\" style=\\\"max-width: 400px\\\">\\n        </div>\\n      </ng-template>\\n\\n      <ng-template ngSwitchCase=\\\"bool\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>{{ settings[0] }}:</label>\\n          <input *ngIf=\\\"settings[2] == 'true'\\\" type=\\\"checkbox\\\" class=\\\"form-control mt-2\\\" name=\\\"{{ settings[0] }}\\\" style=\\\"max-width: 400px\\\" checked>\\n          <input *ngIf=\\\"settings[2] != 'true'\\\" type=\\\"checkbox\\\" class=\\\"form-control mt-2\\\" name=\\\"{{ settings[0] }}\\\" style=\\\"max-width: 400px\\\">\\n        </div>\\n      </ng-template>\\n\\n      <ng-template ngSwitchCase=\\\"url\\\">\\n        <a href=\\\"{{ settings[2] }}\\\">{{ settings[0] }}</a><br>\\n        <br>\\n      </ng-template>\\n\\n      <ng-template ngSwitchCase=\\\"list\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>{{ settings[0] }}:</label>\\n          <select class=\\\"form-control\\\" name=\\\"{{ settings[0] }}\\\" value=\\\"{{ settings[2] }}\\\" style=\\\"max-width: 400px\\\">\\n\\n            <option *ngFor=\\\"let settings_value of settings.slice(3, settings.length - 1)\\\" value=\\\"{{ settings_value }}\\\">{{ settings_value }}</option>\\n\\n          </select>\\n        </div>\\n      </ng-template>\\n\\n    </div>\\n\\n\\n  </div>\\n\\n  <button type=\\\"submit\\\" class=\\\"btn btn-secondary mb-1 mt-2\\\">{{ t.T('Save') }}</button>\\n</form>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { LangService } from \"../../../services/lang.service\";\nimport { SoundParsingService } from \"../../../services/sound-parsing.service\";\nimport { TPHomeControlService } from \"../../../services/t-p-home-control.service\";\nimport { BotMessengerService } from \"../../../services/bot-messenger.service\";\n\nimport { StatusInterfaceServer } from \"../../../models/status-interface-server.model\";\n\n@Component({\n  selector: 'app-settings-interfaces',\n  templateUrl: './settings-interfaces.component.html',\n  styleUrls: ['./settings-interfaces.component.css']\n})\nexport class SettingsInterfacesComponent implements OnInit {\n  // Interface\n  select_type_interface = '';\n  select_name_interface = '';\n\n  map_interface: {[key: string]: StatusInterfaceServer[]} = {['']: []};\n\n  // Settings\n  list_field_settings: string[][] = [[]];\n\n  constructor(public  t:             LangService,\n              private soundParsing:  SoundParsingService,\n              private tpHomeControl: TPHomeControlService,\n              private botMessenger:  BotMessengerService,\n  ) { }\n\n  ngOnInit() {\n    let list_sound_interface:   StatusInterfaceServer[] = [];\n    let list_control_interface: StatusInterfaceServer[] = [];\n    let list_bot_interface:     StatusInterfaceServer[] = [];\n\n    Promise.all([\n      this.soundParsing.getStatusSoundParsings().forEach(\n        (data) => {\n          list_sound_interface = data;\n        }\n      ),\n      this.tpHomeControl.getStatusTPHomeControls().forEach(\n        (data) => {\n          list_control_interface = data;\n        }\n      ),\n      this.botMessenger.getStatusBotMessengers().forEach(\n        (data) => {\n          list_bot_interface = data;\n        }\n      ),\n    ]).then(\n      () => {\n        this.createMap(list_sound_interface, list_control_interface, list_bot_interface);\n    });\n  }\n\n  createMap(list_sound_interface:   StatusInterfaceServer[],\n            list_control_interface: StatusInterfaceServer[],\n            list_bot_interface:     StatusInterfaceServer[]): void {\n    this.map_interface['Sound parsing']   = list_sound_interface;\n    this.map_interface['TP home control'] = list_control_interface;\n    this.map_interface['Bot messenger']   = list_bot_interface;\n\n    this.selectTypeInterface('Sound parsing');\n    this.loadSettings();\n  }\n\n  setSettings(): void {\n    if(this.select_name_interface == '') {\n      return;\n    }\n\n    let formData = new FormData(document.forms.namedItem('form_settings_interface'));\n\n    let settings = {};\n    (<any>formData).forEach(function(value, key){\n      settings[key] = value;\n    });\n\n    switch (this.select_type_interface) {\n      case 'Sound parsing':\n        this.soundParsing.setSettings(this.select_name_interface, settings).subscribe(\n          () => {\n            alert('Ok');\n          },\n          (err) => {\n            alert(err.error);\n          }\n        );\n        break;\n      case 'TP home control':\n        this.tpHomeControl.setSettings(this.select_name_interface, settings).subscribe(\n          () => {\n            alert('Ok');\n          },\n          (err) => {\n            alert(err.error);\n          }\n        );\n        break;\n      case 'Bot messenger':\n        this.botMessenger.setSettings(this.select_name_interface, settings).subscribe(\n          () => {\n            alert('Ok');\n          },\n          (err) => {\n            alert(err.error);\n          }\n        );\n        break;\n      default:\n        alert('error: type interface not found');\n        break;\n    }\n  }\n\n  loadSettings(): void {\n    if(this.select_name_interface == '') {\n      this.list_field_settings = [];\n      return;\n    }\n    switch (this.select_type_interface) {\n      case 'Sound parsing':\n        this.soundParsing.getSettings(this.select_name_interface).subscribe(\n          (data) => {\n            this.list_field_settings = data;\n          },\n          (err) => {\n            alert(err.error);\n          }\n        );\n        break;\n      case 'TP home control':\n        this.tpHomeControl.getSettings(this.select_name_interface).subscribe(\n          (data) => {\n            this.list_field_settings = data;\n          },\n          (err) => {\n            alert(err.error);\n          }\n        );\n        break;\n      case 'Bot messenger':\n        this.botMessenger.getSettings(this.select_name_interface).subscribe(\n          (data) => {\n            this.list_field_settings = data;\n          },\n          (err) => {\n            alert(err.error);\n          }\n        );\n        break;\n      default:\n        alert('error: type interface not found');\n        break;\n    }\n  }\n\n  selectTypeInterface(type_interface: string): void {\n    this.select_type_interface = type_interface;\n    document.getElementById('select_type_interface_button').innerHTML = type_interface;\n    this.selectNameInterface(this.map_interface[type_interface] ? this.map_interface['Sound parsing'][0].name_id : '');\n  }\n\n  selectNameInterface(name_iterface: string): void {\n    this.select_name_interface = name_iterface;\n    document.getElementById('select_name_interface_button').innerHTML = name_iterface;\n\n    this.loadSettings();\n  }\n}\n","module.exports = \"@media (max-width: 500px) {\\n  .navbar_visible_text {\\n    display: none;\\n  }\\n}\\n\\n.navbar_bg_color_use_item {\\n  background-color: #e0e6eb;\\n}\\n\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light justify-content-center\\\"\\n     style=\\\"border-bottom: 1px solid #1b1e21\\\">\\n  <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_home\\\" [class.navbar_bg_color_use_item]=\\\"visible_home\\\"\\n     href=\\\"javascript:void(null);\\\" (click)=\\\"visibleHome()\\\">\\n    <a class=\\\"navbar_visible_text\\\">{{ t.T('Main') }} </a>\\n    <i class=\\\"fa fa-user fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n\\n  <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_email\\\" [class.navbar_bg_color_use_item]=\\\"visible_email\\\"\\n     href=\\\"javascript:void(null);\\\" (click)=\\\"visibleEmail()\\\">\\n    <a class=\\\"navbar_visible_text\\\">{{ t.T('Email') }} </a>\\n    <i class=\\\"fa fa-envelope fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n\\n  <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_controlleds\\\" [class.navbar_bg_color_use_item]=\\\"visible_controlleds\\\"\\n     href=\\\"javascript:void(null);\\\" (click)=\\\"visibleControlleds()\\\">\\n    <a class=\\\"navbar_visible_text\\\">{{ t.T('Controlled') }} </a>\\n    <i class=\\\"fa fa-american-sign-language-interpreting fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n\\n  <a class=\\\"nav-item nav-link badge-light\\\" [class.active]=\\\"visible_interfaces\\\" [class.navbar_bg_color_use_item]=\\\"visible_interfaces\\\"\\n     href=\\\"javascript:void(null);\\\" (click)=\\\"visibleInterfaces()\\\">\\n    <a class=\\\"navbar_visible_text\\\">{{ t.T('Interfaces') }} </a>\\n    <i class=\\\"fa fa-plug fa-lg\\\" aria-hidden=\\\"true\\\"></i>\\n    <span class=\\\"sr-only\\\">(current)</span>\\n  </a>\\n</nav>\\n\\n<app-settings-home        *ngIf=\\\"visible_home\\\"></app-settings-home>\\n<app-settings-email       *ngIf=\\\"visible_email\\\"></app-settings-email>\\n<app-settings-interfaces  *ngIf=\\\"visible_interfaces\\\"></app-settings-interfaces>\\n<app-settings-controlleds *ngIf=\\\"visible_controlleds\\\"></app-settings-controlleds>\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { LangService } from \"../../services/lang.service\";\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n  // Visible components\n  visible_home        = true;\n  visible_email       = false;\n  visible_controlleds = false;\n  visible_interfaces  = false;\n\n  constructor(public t: LangService,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  // Visible components\n  visibleHome(): void {\n    this.visible_home        = true;\n    this.visible_email       = false;\n    this.visible_controlleds = false;\n    this.visible_interfaces  = false;\n  }\n\n  visibleEmail(): void {\n    this.visible_home        = false;\n    this.visible_email       = true;\n    this.visible_controlleds = false;\n    this.visible_interfaces  = false;\n  }\n\n  visibleControlleds(): void {\n    this.visible_home        = false;\n    this.visible_email       = false;\n    this.visible_controlleds = true;\n    this.visible_interfaces  = false;\n  }\n\n  visibleInterfaces(): void {\n    this.visible_home        = false;\n    this.visible_email       = false;\n    this.visible_controlleds = false;\n    this.visible_interfaces  = true;\n  }\n}\n","export class CommandRecord {\n  id:              string = '';\n  type_record:     number = 0;\n  command:         number = -1;\n  string_command:  string = '';\n  number_of_words: number = 0;\n  controlled_id:   number = 0;\n}\n","export class Controlled {\n  id:              number = 0;\n  name:            string = '';\n  host:            string = '';\n  port:            string = '';\n  common_buffer:   number = -1;\n  home_control_id: string = '';\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { MessageServer } from \"../models/message-server.model\";\nimport { StatusInterfaceServer } from \"../models/status-interface-server.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BotMessengerService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // getSettings:\n  /*\n      Example:\n  [\"namefield\",\"typefild\",\"value\"],\n  [\"key\",\"string\",\"\"],\n  [\"uuid\",\"string\",\"fdgdgme-sdfsw-asdsa\"],\n  [\"parse\",\"bool\",\"false\"], //will return from the client \"parse\": false\n  [\"id\",\"int\",\"1990\"], //will return from the client \"id\": 1990\n  [\"fieldListName\",\"list\",\"value\",\"en\",\"sp\",\"ru\"],\n  [\"lang\",\"list\",\"ru\",\"en\",\"sp\",\"ru\"], //will return from the client \"lang\": \"ru\" //first field to up\n  [\"create key google\",\"url\",\"https://google.com\"]\n\n      Options:\n  https://github.com/darkfoxs96/homecontrol#to-all-interfaces\n  */\n  getSettings(bot_messenger_id: string): Observable<string[][]> {\n    return this.httpClient.get<string[][]>('/api/botmessenger/settings/' + bot_messenger_id);\n  }\n\n  // TODO: settings!\n  setSettings(bot_messenger_id: string, settings: any): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/botmessenger/settings/' + bot_messenger_id, settings);\n  }\n\n  getStatusBotMessengers(): Observable<StatusInterfaceServer[]> {\n    return this.httpClient.get<StatusInterfaceServer[]>('/api/botmessenger');\n  }\n\n  // getBotMessenger return: field 'message', 'bool_message'\n  getStatusBotMessenger(bot_messenger_id: string): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/botmessenger/' + bot_messenger_id);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { CommandRecord } from \"../models/command-record.model\";\nimport { MessageServer } from \"../models/message-server.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandRecordService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCommandRecords(): Observable<CommandRecord[]> {\n    return this.httpClient.get<CommandRecord[]>('/api/command/record');\n  }\n\n  // id == command record\n  getCommandRecord(id: string): Observable<CommandRecord> {\n    return this.httpClient.get<CommandRecord>('/api/command/record/' + id);\n  }\n\n  addOrUpdateCommandRecord(command_record: CommandRecord): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/command/record/' + command_record.id, {\n      type_record:     command_record.type_record,\n      command:         command_record.command,\n      string_command:  command_record.string_command,\n      number_of_words: command_record.number_of_words,\n      controlled_id:   command_record.controlled_id\n    })\n  }\n\n  // id == command record\n  deleteCommandRecord(id: string): Observable<MessageServer> {\n    return this.httpClient.delete<MessageServer>('/api/command/record/' + id);\n  }\n\n  useText(command: string, buffer: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/command/used/text', {\n      buffer: buffer,\n      command: command\n    });\n  }\n\n  // TODO: settings !\n  // sound - byte[]\n  useSound(sound: number[], stringCommand: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/command/used/sound', sound);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from \"rxjs/index\";\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { ListCommands } from \"../models/list-commands.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommandService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCommands(): Observable<ListCommands[]> {\n    return this.httpClient.get<ListCommands[]>('/api/commands');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { Controlled } from \"../models/controlled.model\";\nimport { MessageServer } from \"../models/message-server.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ControlledService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getControlled(id: number): Observable<Controlled> {\n    return this.httpClient.get<Controlled>('/api/controlled/' + id);\n  }\n\n  getControlleds(): Observable<Controlled[]> {\n    return this.httpClient.get<Controlled[]>('/api/controlled');\n  }\n\n  // addControlled return: new id `Controlled`. string parse to number\n  addControlled(controlled: Controlled): Observable<string> {\n    return this.httpClient.post<string>('/api/controlled', {\n      common_buffer:   controlled.common_buffer,\n      home_control_id: controlled.home_control_id,\n      host:            controlled.host,\n      name:            controlled.name,\n      port:            controlled.port\n    })\n  }\n\n  updateControlled(controlled: Controlled): Observable<MessageServer> {\n    return this.httpClient.put<MessageServer>('/api/controlled/' + controlled.id, {\n      common_buffer:   controlled.common_buffer,\n      home_control_id: controlled.home_control_id,\n      host:            controlled.host,\n      name:            controlled.name,\n      port:            controlled.port\n    })\n  }\n\n  deleteControlled(id: number): Observable<MessageServer> {\n    return this.httpClient.delete<MessageServer>('/api/controlled/' + id);\n  }\n\n  getControlledsInfo(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/controlled/info');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LangService {\n  public list_lang: string[] = listLang;\n  private lang = lang;\n  private words_map: {[key:string]:{[key:string]:string}} = {\n    ['ru-RU']: {\n      ['Control']: 'Управление',\n      ['Settings']: 'Настройки',\n      ['Commands']: 'Команды',\n      ['Reload microphone']: 'Перезагрузить микрофон',\n      ['Text to the command']: 'Текст к команде(buffer)',\n      ['Auxiliary command']: 'Вспомогател. команда',\n      ['Name']: 'Название',\n      ['Command']: 'Команда',\n      ['Controlled?']: 'Контролиру.?',\n      ['Close']: 'Отмена',\n      ['Add command']: 'Добавить команду',\n      ['Save']: 'Сохранить',\n      ['Add callsign']: 'Добавить позывной',\n      ['Controlled']: 'Контролиру.',\n      ['No more than one word']: 'Не больше одного слова',\n      ['Empty command']: 'Введите комманду',\n      ['Main']: 'Глав.',\n      ['Interfaces']: 'Интерф.',\n      ['Email']: 'Email',\n      ['Error: your language not found']: 'Ошибка: ваш язык не найден',\n      ['Language']: 'Язык',\n      ['Set sample rate']: 'Установить sample rate',\n      ['New password']: 'Новый пароль',\n      ['Old password']: 'Старый пароль',\n      ['Logout']: 'Выход',\n      ['There is an empty field']: 'Есть пустое поле',\n      ['E-mail setup, for password recovery']: 'Настройки электронной почты, для восстановления пароля',\n      ['Password']: 'Пароль',\n      ['Email password']: 'Пароль от email',\n      ['Email login']: 'Логин от email',\n      ['TPHC']: 'ССКД',\n      ['Common buffer']: 'Общ. buffer обмена',\n      ['Add controlled']: 'Добавить контролируемого',\n      ['Login']: 'Вход',\n    },\n    ['en-US']: {\n      ['Control']: 'Control',\n      ['Settings']: 'Settings',\n      ['Commands']: 'Commands',\n      ['Reload microphone']: 'Reload microphone',\n      ['Text to the command']: 'Text to the command(buffer)',\n      ['Auxiliary command']: 'Auxiliary command',\n      ['Name']: 'Name',\n      ['Command']: 'Command',\n      ['Controlled?']: 'Controlled?',\n      ['Close']: 'Close',\n      ['Add command']: 'Add command',\n      ['Save']: 'Save',\n      ['Add callsign']: 'Add callsign',\n      ['Controlled']: 'Controlled',\n      ['No more than one word']: 'No more than one word',\n      ['Empty command']: 'Empty command',\n      ['Main']: 'Main',\n      ['Interfaces']: 'Interfaces',\n      ['Email']: 'Email',\n      ['Error: your language not found']: 'Error: your language not found',\n      ['Language']: 'Language',\n      ['Set sample rate']: 'Set sample rate',\n      ['New password']: 'New password',\n      ['Old password']: 'Old password',\n      ['Logout']: 'Logout',\n      ['There is an empty field']: 'There is an empty field',\n      ['E-mail setup, for password recovery']: 'E-mail setup, for password recovery',\n      ['Password']: 'Password',\n      ['Email password']: 'Email password',\n      ['Email login']: 'Email login',\n      ['TPHC']: 'TPHC',\n      ['Common buffer']: 'Common buffer',\n      ['Add controlled']: 'Add controlled',\n      ['Login']: 'Login',\n    },\n  };\n\n  constructor() { }\n\n  T(word: string): string {\n    let return_words = this.words_map[this.lang][word];\n    if(return_words) {\n      return return_words;\n    } else {\n      return '';\n    }\n  }\n\n  setLang(lang_use: string): Error {\n    if(isLang(lang_use)) {\n      this.lang = lang_use;\n      localStorage.setItem('lang_use', lang_use);\n      return null;\n    } {\n      return new Error(this.T('Error: your language not found'));\n    }\n  }\n\n  getLang(): string {\n    return this.lang;\n  }\n}\n\nlet listLang = ['en-US', 'ru-RU'];\n\nlet localStorageLang = localStorage.getItem('lang_use');\nlet lang = 'en-US';\nif(localStorageLang && localStorageLang != '' && isLang(localStorageLang)) {\n  lang = localStorageLang;\n}\nif(localStorageLang == '') {\n  localStorage.setItem('lang_use', 'en-US')\n}\n\nfunction isLang(lang: string): boolean {\n  let result = false;\n  listLang.forEach(function (value) {\n    if(lang == value) {\n      result = true;\n    }\n  });\n  return result;\n}\n","import { Injectable } from '@angular/core';\n\nimport { Store } from \"@ngrx/store\";\nimport { IAppReducerState } from \"../store/reducers/appReducer\";\nimport { GO_RELOAD_ARRAY, RELOAD_ARRAY } from \"../store/actions/appActions\";\n\nimport { CommandService } from \"./command.service\";\nimport { ControlledService } from \"./controlled.service\";\nimport { CommandRecordService } from \"./command-record.service\";\nimport { CommandRecord } from \"../models/command-record.model\";\nimport { Controlled } from \"../models/controlled.model\";\nimport { ListCommands } from \"../models/list-commands.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadArrayService {\n\n  constructor(private store:          Store<IAppReducerState>,\n              private commandService: CommandService,\n              private controlled:     ControlledService,\n              private commandRecord:  CommandRecordService,\n  ) {\n    this.store.select<IAppReducerState>('appReducer').subscribe(\n    (data) => {\n        if(data.type == GO_RELOAD_ARRAY) {\n          this.loadArray();\n        }\n      }\n    );\n  }\n\n  private loadArray(): void {\n    let list_controlled:     Controlled[]    = [];\n    let list_commands:       ListCommands[]  = [];\n    let list_command_record: CommandRecord[] = [];\n\n    Promise.all([\n      this.commandRecord.getCommandRecords().forEach(\n        (data) => {\n          list_command_record = data;\n        }\n      ),\n      this.controlled.getControlleds().forEach(\n        (data) => {\n          list_controlled = data;\n        }\n      ),\n      this.commandService.getCommands().forEach(\n        (data) => {\n          list_commands = data;\n        }\n      ),\n    ]).then(() => {\n      this.store.dispatch<IAppReducerState>({\n        type:                RELOAD_ARRAY,\n        list_controlled:     list_controlled,\n        list_commands:       list_commands,\n        list_command_record: list_command_record,\n      });\n    });\n  }\n\n  getStore() {\n    return {\n      listener_store: this.store.select<IAppReducerState>('appReducer'),\n      load_array: (): void => {\n        this.store.dispatch<IAppReducerState>({\n          type:                GO_RELOAD_ARRAY,\n          list_controlled:     [],\n          list_commands:       [],\n          list_command_record: [],\n        });\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { MessageServer } from \"../models/message-server.model\";\nimport { StatusInterfaceServer } from \"../models/status-interface-server.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SoundParsingService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // getNameUse return: field 'message'\n  getNameUse(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/soundparsing/used');\n  }\n\n  setNameUse(sound_parsing_id: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/soundparsing/used', sound_parsing_id);\n  }\n\n  // getSettings:\n  /*\n      Example:\n  [\"namefield\",\"typefild\",\"value\"],\n  [\"key\",\"string\",\"\"],\n  [\"uuid\",\"string\",\"fdgdgme-sdfsw-asdsa\"],\n  [\"parse\",\"bool\",\"false\"], //will return from the client \"parse\": false\n  [\"id\",\"int\",\"1990\"], //will return from the client \"id\": 1990\n  [\"field_list_name\",\"list\",\"value\",\"en\",\"sp\",\"ru\"],\n  [\"lang\",\"list\",\"ru\",\"en\",\"sp\",\"ru\"], //will return from the client \"lang\": \"ru\" //first field to up\n  [\"create key google\",\"url\",\"https://google.com\"]\n\n      Options:\n  https://github.com/darkfoxs96/homecontrol#to-all-interfaces\n  */\n  getSettings(sound_parsing_id: string): Observable<string[][]> {\n    return this.httpClient.get<string[][]>('/api/soundparsing/settings/' + sound_parsing_id);\n  }\n\n  // TODO: settings!\n  setSettings(sound_parsing_id: string, settings: any): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/soundparsing/settings/' + sound_parsing_id, settings);\n  }\n\n  getStatusSoundParsings(): Observable<StatusInterfaceServer[]> {\n    return this.httpClient.get<StatusInterfaceServer[]>('/api/soundparsing');\n  }\n\n  // getSoundParsing return: field 'message', 'bool_message'\n  getStatusSoundParsing(sound_parsing_id: string): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/soundparsing/' + sound_parsing_id);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { MessageServer } from \"../models/message-server.model\";\nimport { StatusInterfaceServer } from \"../models/status-interface-server.model\";\nimport { ListCommands } from \"../models/list-commands.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\n// TPHomeControlService third party home control system\nexport class TPHomeControlService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // getSettings:\n  /*\n      Example:\n  [\"namefield\",\"typefild\",\"value\"],\n  [\"key\",\"string\",\"\"],\n  [\"uuid\",\"string\",\"fdgdgme-sdfsw-asdsa\"],\n  [\"parse\",\"bool\",\"false\"], //will return from the client \"parse\": false\n  [\"id\",\"int\",\"1990\"], //will return from the client \"id\": 1990\n  [\"fieldListName\",\"list\",\"value\",\"en\",\"sp\",\"ru\"],\n  [\"lang\",\"list\",\"ru\",\"en\",\"sp\",\"ru\"], //will return from the client \"lang\": \"ru\" //first field to up\n  [\"create key google\",\"url\",\"https://google.com\"]\n\n      Options:\n  https://github.com/darkfoxs96/homecontrol#to-all-interfaces\n  */\n  getSettings(t_p_home_control_id: string): Observable<string[][]> {\n    return this.httpClient.get<string[][]>('/api/tphomecontrol/settings/' + t_p_home_control_id);\n  }\n\n  // TODO: settings!\n  setSettings(t_p_home_control_id: string, settings: any): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/tphomecontrol/settings/' + t_p_home_control_id, settings);\n  }\n\n  // getObjects return: [[\"objectID\", \"info object\"], [\"objectID\", \"info object\"], [\"\", \"\"]...]\n  getObjects(t_p_home_control_id: string): Observable<string[][]> {\n    return this.httpClient.get<string[][]>('/api/tphomecontrol/objects/' + t_p_home_control_id);\n  }\n\n  getStatusTPHomeControls(): Observable<StatusInterfaceServer[]> {\n    return this.httpClient.get<StatusInterfaceServer[]>('/api/tphomecontrol');\n  }\n\n  // getStatusTPHomeControl return: field 'message', 'bool_message'\n  getStatusTPHomeControl(t_p_home_control_id: string): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/tphomecontrol/' + t_p_home_control_id);\n  }\n\n  getCommands(t_p_home_control_id: string): Observable<ListCommands>  {\n    return this.httpClient.get<ListCommands>('/api/tphomecontrol/commands/' + t_p_home_control_id);\n  }\n\n  getInfoTPHomeControls(): Observable<string> {\n    return this.httpClient.get<string>('/api/tphomecontrol/info');\n  }\n\n  // getInfoTPHomeControlString return: all info...\n  getInfoTPHomeControlString(t_p_home_control_id: string): Observable<string> {\n    return this.httpClient.get<string>('/api/tphomecontrol/info/' + t_p_home_control_id + '?type=string');\n  }\n\n  // getInfoTPHomeControlStrings return: [\"info\", \"info\", \"info\", \"info\"...]\n  getInfoTPHomeControlStrings(t_p_home_control_id: string): Observable<string[]> {\n    return this.httpClient.get<string[]>('/api/tphomecontrol/info/' + t_p_home_control_id + '?type=json');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { MessageServer } from \"../models/message-server.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UseControlService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  // getReportUnauthorizedUse return: field 'bool_message'\n  getReportUnauthorizedUse(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/usecontrol/reportunauthorizeduse');\n  }\n\n  setReportUnauthorizedUse(report_unauthorized_use: boolean): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/usecontrol/reportunauthorizeduse', '' + report_unauthorized_use);\n  }\n\n  // getDetectedTime return: field 'int_message' format second\n  getDetectedTime(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/usecontrol/detectedtime');\n  }\n\n  // setDetectedTime format second\n  setDetectedTime(detected_time: number): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/usecontrol/detectedtime', '' + detected_time);\n  }\n\n  // getLog return: field 'message'\n  getLog(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/usecontrol/log');\n  }\n\n  // getLastTime return: field 'int_message' format second\n  getLastTime(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/usecontrol/lasttime');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs/index\";\n\nimport { MessageServer } from \"../models/message-server.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  login(password: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/login', {\n      password: password\n    });\n  }\n\n  logout(): Observable<MessageServer> {\n    return this.httpClient.get<MessageServer>('/api/user/logout');\n  }\n\n  passwordNew(old_password: string, new_password: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/user/password/new', {\n      new_password: new_password,\n      old_password: old_password\n    });\n  }\n\n  // passwordRecovery by password_email. Message with a new password to client email address\n  passwordRecovery(password_email: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/user/password/recovery', {\n      password_email: password_email\n    });\n  }\n\n  // getSMTPServer Array SMTP-servers that support the server 'HomeControl'\n  getSMTPServer(): Observable<string[]> {\n    return this.httpClient.get<string[]>('/api/user/email/smtpserver');\n  }\n\n  settingsEmail(password: string, login_email: string, password_email: string, smtp_server: string): Observable<MessageServer> {\n    return this.httpClient.post<MessageServer>('/api/user/email', {\n      password:       password,\n      login_email:    login_email,\n      password_email: password_email,\n      smtp_server:    smtp_server,\n    });\n  }\n}\n","export const RELOAD_ARRAY = 'RELOAD_ARRAY';\nexport const GO_RELOAD_ARRAY = 'GO_RELOAD_ARRAY';\n","import { GO_RELOAD_ARRAY, RELOAD_ARRAY } from \"../actions/appActions\";\n\nimport { Controlled } from \"../../models/controlled.model\";\nimport { CommandRecord } from \"../../models/command-record.model\";\nimport { ListCommands } from \"../../models/list-commands.model\";\n\nexport interface IAppReducerState {\n  type:                any;\n  list_controlled:     Controlled[];\n  list_commands:       ListCommands[];\n  list_command_record: CommandRecord[];\n}\n\nconst initalSate: IAppReducerState = {\n  type:                {},\n  list_controlled:     [],\n  list_commands:       [],\n  list_command_record: [],\n};\n\nexport function reducer(state = initalSate, action): IAppReducerState {\n  switch(action.type) {\n    case RELOAD_ARRAY:\n      return {\n        ...state,\n        type:                action.type,\n        list_controlled:     action.list_controlled,\n        list_commands:       action.list_commands,\n        list_command_record: action.list_command_record,\n      };\n    case GO_RELOAD_ARRAY:\n      return {\n        ...state,\n        type:                action.type,\n        list_controlled:     state.list_controlled,\n        list_commands:       state.list_commands,\n        list_command_record: state.list_command_record,\n      }\n    default:\n      return state;\n  }\n}\n","import { IAppReducerState, reducer } from \"./appReducer\";\n\nimport { ActionReducerMap } from \"@ngrx/store\"\n\n\ninterface AppState {\n  appReducer: IAppReducerState\n}\n\nexport const Reducers: ActionReducerMap<AppState> = {\n  appReducer: reducer\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}